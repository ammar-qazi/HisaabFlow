[bank_info]
name = nayapay
file_patterns = nayapay,naya_pay
filename_regex_patterns = ^m-\d{2}-\d{4}\.csv$,^nayapay.*\.csv$,^naya_pay.*\.csv$
use_regex = true
currency_primary = PKR
cashew_account = NayaPay
detection_content_signatures = NayaPay ID,NayaPay Account Number,Customer Name
expected_headers = TIMESTAMP,TYPE,DESCRIPTION,AMOUNT,BALANCE


# CSV parsing configuration
[csv_config]
has_header = true
skip_rows = 0
date_format = %%Y-%%m-%%d
encoding = utf-8
start_row = 13
end_col = 5
# Header row detection
header_row = 13
data_start_row = 14
header_detection_method = fixed

# Column mapping (Fixed to match actual NayaPay CSV structure - lowercase standard)
[column_mapping]
date = TIMESTAMP
amount = AMOUNT
title = DESCRIPTION
note = TYPE
balance = BALANCE

# Data cleaning configuration
[data_cleaning]
enable_currency_addition = true
multi_currency = false
numeric_amount_conversion = true
date_standardization = true
remove_invalid_rows = true
default_currency = PKR

# Transfer detection patterns with flexible name matching
[outgoing_patterns]
outgoing_transfer = Outgoing fund transfer to {name}
peer_to_peer_out = Money sent to {name}

[incoming_patterns]
incoming_transfer = Incoming fund transfer from {name}
peer_to_peer_in = Received money from {name}

# Bank-specific description cleaning rules matching anonymized sample data
[description_cleaning]
# Transform specific person names to generic equivalents
person_pattern = Outgoing fund transfer to Sample Person.*|Sample Payment
# Clean up ride sharing transactions  
rideshare_pattern = Card transaction.*RideShare.*|Ride Share Service
# Simplify merchant patterns
grocery_pattern = Grocery Store.*|Grocery Store
market_pattern = Market.*|Market
# Mobile top-ups with generic names
mobile_topup = Mobile top-up purchased\|.*Nickname: (.*?)(?:\|.*)?$|Mobile topup for \1
clean_transaction_id = ^(.*?)(?:\s*\|?\s*Transaction\s+ID\s+[A-Za-z0-9]+\s*\|?\s*)(.*?)$|\1



# Conditional Description Overrides
[conditional_override_ride_hailing_raast]
name = NayaPay Raast Ride Hailing Detection
if_amount_min = -2000
# Max amount (exclusive of 0, so up to -0.01 for expenses)
if_amount_max = -0.01  
if_note_equals = Raast Out
if_description_contains = Outgoing fund transfer to
set_description = Ride Hailing Services

# Merchant categorization matching anonymized sample data
[categorization]
# Sample data merchants - matching real NayaPay format
Coffee = Dining
Grocery= Groceries
Restaurant = Dining
Gas Station = Travel
Netflix = Entertainment
Pharmacy = Health
Bookstore = Shopping
Electronics = Electronics
Taxi = Travel
Online Course Subscription = Education
Flower = Shopping
Cinema = Entertainment
Sports = Shopping
Hair = Health
Spotify = Entertainment
Fast Food = Dining
Clothing = Shopping
Pet = Shopping
Cloud Storage = Bills & Fees
SaveMart = Groceries
Petrol = Transport
Steakhouse = Dining
Course = Education
Cineplex = Entertainment
Cheezious = Dining
D. Watson = Groceries



Card Payment = Expense
Online Payment = Bills & Fees

# Default categorization logic
[default_category_rules]
positive_amount = Income
negative_amount = Expense
zero_amount = Transfer
